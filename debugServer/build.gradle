plugins {
    id 'java'
}

group 'com.basic4gl.debug.server'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    release.extendsFrom configurations.default
}

dependencies {
    implementation project(":compiler")
    implementation project(":debugProtocol")
    implementation project(":runtime")

    implementation ('com.google.code.gson:gson:2.10')

    implementation ('javax.websocket:javax.websocket-api:1.0')

    implementation ('org.eclipse.jetty:jetty-server:9.4.49.v20220914')
    implementation ('org.eclipse.jetty:jetty-servlet:9.4.49.v20220914')
    implementation ('org.eclipse.jetty:jetty-webapp:9.4.49.v20220914')
    implementation ('org.eclipse.jetty.websocket:javax-websocket-server-impl:9.4.49.v20220914')

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

task copyToLib( type: Copy ) {
    into "$buildDir/libs/lib"
    from configurations.release
}

jar {
    dependsOn copyToLib

    def classPath = configurations.release.files.collect { it.name }.join(' ')

    from {
        (configurations.release).collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }

    manifest {
        attributes (
                'Main-Class': 'com.basic4gl.debug.server.DebugServer',
                'Class-Path': classPath
        )
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    exclude 'META-INF/.RSA', 'META-INF/.SF', 'META-INF/*.DSA'

    rootProject.ext.set("debugServerJarPath", jar.archiveFile.get())

    doLast {
        new File(projectDir, "class-path.txt").text = classPath
    }
}

test {
    useJUnitPlatform()
}