plugins {
    id "application"
}
apply plugin: "java"

ext {
    javaMainClass = "com.basic4gl.desktop.MainWindow"
}

repositories {
    mavenCentral()
}

application {
    mainClassName = javaMainClass
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":runtime")
    implementation project(":compiler")
    implementation project(":library")
    implementation project(":debugProtocol")

//    implementation RSyntaxTextArea

    implementation 'com.formdev:flatlaf:3.0'

    // for debugger
    implementation ('com.google.code.gson:gson:2.10')
    implementation ('javax.websocket:javax.websocket-api:1.0')
    implementation ('org.eclipse.jetty.websocket:javax-websocket-client-impl:9.4.49.v20220914')

    testCompile 'junit:junit:4.12'
}

jar {
    from { configurations.default.collect { it.isDirectory() ? it : zipTree(it) } }
    from sourceSets.test.output
    manifest {
        attributes (
            'Main-Class': javaMainClass,
            'Class-Path': configurations.default.files.collect { it.name }.join(' ')
        )
    }
    exclude 'META-INF/.RSA', 'META-INF/.SF','META-INF/*.DSA'
}
//
//task withRuntime(type: "jar"){
//    from sourceSets.all
//
//}
task copyTask(type: Copy) {
    from '../samples'
    into 'build/samples'
}
run {
//    args project(":library").task("jar").archiveFile.get()
    dependsOn (":library:jar") {
//        println(project(":library").task("jar").archiveFile.get())
        println(rootProject.ext.get("libraryJarPath"))
//        args rootProject.ext.get("libraryJarPath")
    }
}
task runWithLibrary {
    dependsOn (":debugServer:jar")
    dependsOn (":library:jar") {
        run {
            args rootProject.ext.get("libraryJarPath"),
                rootProject.ext.get("debugServerJarPath")
        }
    }
}

repositories {
    mavenCentral()
}
